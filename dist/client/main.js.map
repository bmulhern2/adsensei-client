{"version":3,"sources":["./src/app/analytics/analytics.component.ts","./src/app/analytics/analytics.component.html","./src/app/docs/docs.component.ts","./src/app/docs/docs.component.html","./src/environments/environment.ts","./src/app/http.service.ts","./src/app/pay-bill/pay-bill.component.ts","./src/app/pay-bill/pay-bill.component.html","./src/app/success/success.component.ts","./src/app/success/success.component.html","./src/app/sign-in/sign-in.component.ts","./src/app/sign-in/sign-in.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/sign-up/sign-up.component.ts","./src/app/sign-up/sign-up.component.html","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { CookieService } from 'ngx-cookie-service'\nimport { Clipboard } from '@angular/cdk/clipboard'\nimport { Sort } from '@angular/material/sort'\nimport { Request } from '../Requests.interface'\n \n@Component({\n  selector: 'app-analytics',\n  templateUrl: './analytics.component.html',\n  styleUrls: ['./analytics.component.css']\n})\nexport class AnalyticsComponent implements OnInit {\n  count: number = 0;\n  requests: any;\n  data: any;\n  token: any;\n  value: string = 'Sign In To Earn A Key';\n  sortedData: Request[] = [];\n  email: string;\n  constructor(private clipboard: Clipboard, private cookieService: CookieService, private service: HttpService) {\n    this.email = this.cookieService.get('email');\n   }\n  ngOnInit() {\n    this.service.getRequests(this.email).subscribe(response => {\n      if (response) {\n        this.data = response;\n        this.count = this.data['count'];\n        console.log(this.count);\n        this.requests = this.data['request'];\n        this.sortedData = this.requests.slice();\n        console.log(this.requests);\n      } else {\n        console.log(\"No Response\")\n      }\n    })\n    this.service.getToken(this.email).subscribe(token => {\n      if (token) {\n        this.token = token;\n        this.value = this.token['token'];\n      } else {\n        console.log(\"No Token.\")\n      }\n    })\n  }\n  copy() {\n    this.clipboard.copy(this.value)\n  }\n  sortData(sort: Sort) {\n    const data = this.requests.slice();\n    if (!sort.active || sort.direction === '') {\n      this.sortedData = data;\n      return\n    }\n    this.sortedData = data.sort((a: any, b: any) => {\n      const isAsc = sort.direction === 'asc';\n      switch (sort.active) {\n        case '_id': return compare(a._id, b._id, isAsc);\n        case 'path': return compare(a.path, b.path, isAsc);\n        case 'method': return compare(a.method, b.method, isAsc);\n        case 'date': return compare(a.date, b.date, isAsc);\n        default: return 0;\n      }\n    })\n  } \n}\nfunction compare(a: number | string, b: number | string, isAsc: boolean) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1)\n}\n","<app-header></app-header>\n<mat-card>\n    <mat-card-title>\n        <h1>Admin</h1>\n    </mat-card-title>\n    <mat-card-content>\n        <div fxLayout=\"row\" fxLayoutAlgin=\"space-between\">\n            <ng-template *ngIf=\"email\">\n            <div id=\"row1\"> \n            <div id=\"box\">\n                <h2>Requests Made</h2>\n                <div id=\"count\">\n                    <h2>{{ count }}</h2>\n                </div>\n            </div>\n            <div id=\"box\">\n                <h2>Monies Spent</h2>\n                <div id=\"count\">\n                    <h2>${{ count * 0.01 }}</h2>\n                </div>\n            </div>\n        </div>\n    </ng-template>\n        </div>\n            <div id=\"box\">\n                <h2>API Key</h2>\n                <div id=\"count\">\n                    <textarea value=\"{{ value }}\"></textarea>\n                </div>\n                <button (click)=\"copy()\">Copy API Key</button>\n            </div>\n    </mat-card-content>\n    <mat-card-content>\n        <ng-template *ngIf=\"email\">\n        <h1 class=\"text-center\">Requests</h1>\n        <table matSort (matSortChange)=\"sortData($event)\">\n            <tr>\n                <th mat-sort-header=\"_id\">Id</th>\n                <th mat-sort-header=\"path\">Path</th>\n                <th mat-sort-header=\"method\">Method</th>\n                <th mat-sort-header=\"date\">Date</th>\n            </tr>\n            <tr *ngFor=\"let request of requests\">\n                <td>{{ request._id }}</td>\n                <td>{{ request.path }}</td>\n                <td>{{ request.method }}</td>\n                <td>{{ request.date }}</td>\n            </tr>\n        </table>\n    </ng-template>\n        <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n    </mat-card-content>\n</mat-card>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-docs',\n  templateUrl: './docs.component.html',\n  styleUrls: ['./docs.component.css']\n})\nexport class DocsComponent implements OnInit {\n  panelOpenState = false;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-header></app-header>\n<mat-card>\n    <mat-card-title>\n        <h1>Documentation</h1>\n    </mat-card-title>\n    <mat-card-subtitle>\n        <p>AdSensei is an Application Programming Interface (API) that allows for the storage of media files on a server. This is perfect if your website or mobile application needs media files such as mp3 or mp4 files. All one needs to do is to hit the right enpoints with the token in the headers and your able to store your media files!</p>\n    </mat-card-subtitle>\n    <mat-card-content>\n        <mat-accordion>\n            <mat-expansion-panel (opened)=\"panelOpenState = true\" (closed)=\"panelOpenState = false\">\n                    <mat-expansion-panel-header>\n                        <p>Endpoints:</p>\n                    </mat-expansion-panel-header>\n                    <mat-panel-description>\n                        To Get All Files: 'https://adsensei.herokuapp.com/api/file/get/download/:email'\n                    </mat-panel-description>\n                    <mat-panel-description>\n                        To Post A Files: 'https://adsensei.herokuapp.com/api/file/get/upload/:email'\n                    </mat-panel-description>\n                    <mat-panel-description>\n                        To Edit A File: 'https://adsensei.herokuapp.com/api/file/edit/:email/:id'\n                    </mat-panel-description>\n                    <mat-panel-description>\n                        To Delete A Files: 'https://adsensei.herokuapp.com/api/file/get/delete/:email/:id'\n                    </mat-panel-description>\n                </mat-expansion-panel>\n                <mat-expansion-panel (opened)=\"panelOpenState = true\" (closed)=\"panelOpenState = false\">\n                    <mat-expansion-panel-header>\n                        <p>Authentication with the API Key:</p>\n                    </mat-expansion-panel-header>\n                    <mat-panel-title>\n                        Make sure your API Key is in the headers portion of the http requests as 'token'.\n                    </mat-panel-title>\n                </mat-expansion-panel>\n                <mat-expansion-panel (opened)=\"panelOpenState = true\" (closed)=\"panelOpenState = false\">\n                    <mat-expansion-panel-header>\n                        <p>Rules:</p>\n                    </mat-expansion-panel-header>\n                    <mat-panel-title>\n                        Please obey all laws with media content or account deletion will occur.\n                    </mat-panel-title>\n                </mat-expansion-panel>\n            </mat-accordion>\n    </mat-card-content>\n</mat-card>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { User } from './User.interface'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  constructor(private http: HttpClient) { }\n  signUp(newUser: User) {\n    return this.http.post('/api/user/signup', newUser)\n  }\n  signIn(newUser: User) {\n    return this.http.post('/api/user/validate', newUser)\n  }\n  getRequests(email: string) {\n    return this.http.get('/api/get/requests/' + email);\n  }\n  getToken(email: string) {\n    return this.http.get('/api/get/api/key/' + email);\n  }\n  getStripeKey() {\n    return this.http.get('/api/get/stripe/key');\n  }\n  payBill(data: any) {\n    return this.http.post('/create-checkout-session', data);\n  }\n}\n","import { Component, OnInit, ElementRef, ChangeDetectorRef, OnDestroy, ViewChild } from '@angular/core';\nimport { HttpService } from '../http.service'\nimport { CookieService } from 'ngx-cookie-service'\n\ndeclare var Stripe: any;\n\n@Component({\n  selector: 'app-pay-bill',\n  templateUrl: './pay-bill.component.html',\n  styleUrls: ['./pay-bill.component.css']\n})\nexport class PayBillComponent implements OnInit {  count: number = 0;\n  data: any;\n  handler: any;\n  total: number = 0;\n  email: string = '';\n  stripe: any;\n  constructor(private cookieService: CookieService, private service: HttpService) { }\n  ngOnInit() { \n    this.service.getStripeKey().subscribe((res: any) => {\n      console.log(res);\n      const key = res['stripeKey'];\n      this.stripe = Stripe(key);\n    });\n    this.email = this.cookieService.get('email')\n    this.service.getRequests(this.email).subscribe(response => {\n      if (response) {\n        this.data = response;\n        this.count = this.data['count'];\n        this.total = this.count * 0.01\n      } else {\n        console.log(\"No Reponse.\")\n      }\n    })\n  }\n    buy() {\n      var sendables = {\n        total: this.total,\n        email: this.email\n      }\n      this.service.payBill(sendables).subscribe(res => {\n        if (res) {\n          console.log(res); \n        } else {\n          console.log(\"No Res.\")\n        }\n      })\n    }\n}\n","<app-header></app-header>\n<mat-card>\n    <mat-card-title>\n        <h1>Billing</h1>\n    </mat-card-title>\n    <mat-card-content>\n        <h2>Amount Due</h2>\n        <h2>${{ count * 0.01 }}</h2>\n    </mat-card-content>\n    <mat-card-content>\n        <ng-template *ngIf=\"email\">\n        <form id=\"form\">\n            <h1>Pay Bill</h1>\n            <input class=\"second form-control\" type=\"text\" placeholder=\"Name\"/>\n            <br />\n            <input class=\"second form-control\" type=\"text\" placeholder=\"Card Number\" />\n            <br />\n            <div class=\"form-group\">\n            <input class=\"third\" type='text' placeholder=\"CVC\" style=\"color:black;\" />\n            <input class=\"third\" type=\"text\" placeholder=\"Month\" style=\"color:black;\" />\n            <input class=\"third\" type=\"text\" placeholder=\"Year\" style=\"color:black;\" />\n            <br />\n            </div>\n            <script src=\"https://js.stripe.com/v3/\"></script>\n            <button class=\"btn btn-success\" (click)=\"buy()\">Pay</button>\n        </form>\n    </ng-template>\n    </mat-card-content>\n</mat-card>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-success',\n  templateUrl: './success.component.html',\n  styleUrls: ['./success.component.css']\n})\nexport class SuccessComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-header></app-header>\n<mat-card>\n    <mat-card-title>\n        <h1>Bill Payment Success!</h1>\n    </mat-card-title>\n</mat-card>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators, FormGroup, FormBuilder } from '@angular/forms';\nimport { HttpService } from '../http.service';\nimport { Router } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service'\n\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.css']\n})\n\nexport class SignInComponent implements OnInit {\n  signUpForm: FormGroup;\n  constructor(private router: Router, private service: HttpService, private cookieService: CookieService, private fb: FormBuilder) {\n    this.signUpForm = this.fb.group({\n      email: new FormControl(null, Validators.required),\n      password: new FormControl(null, Validators.required)\n    })\n   }\n\n  ngOnInit() { }\n  getErrorMessageEmail() {\n    if (this.signUpForm.get('email')?.value.hasError('required')) {\n      return 'You must enter a value';\n    }\n    return this.signUpForm.get('email')?.value.hasError('email') ? 'Not valid' : '';\n  }\n  getErrorMessagePassword() {\n    if (this.signUpForm.get('password')?.value.hasError('required')) {\n      return 'You must enter a value';\n    }\n    return this.signUpForm.get('password')?.value.hasError('password') ? 'Not valid' : '';\n  }\n  signIn() {\n    let newUser = {\n      email: this.signUpForm.get('email')?.value,\n      password: this.signUpForm.get('password')?.value\n    }\n    this.service.signIn(newUser).subscribe(response => {\n      if (response === true) {\n        this.cookieService.set('email', newUser['email'])\n        this.router.navigate(['/analytics'])\n      } else {\n        alert(\"Email or Password Incorrect\");\n      }\n    })\n  }\n}","<app-header></app-header>\n<mat-card>\n    <mat-card-title>\n        <h1>Sign In</h1>\n    </mat-card-title>\n    <mat-card-subtitle>\n        <p>AdSensei is an Application Programming Interface (API) that allows for the storage of media files on a server. This is perfect if your website or mobile application needs media files such as mp3 or mp4 files. All one needs to do is to hit the right enpoints with the token in the headers and your able to store your media files!</p>\n    </mat-card-subtitle>\n    <mat-card-content>\n<form [formGroup]=\"signUpForm\" (ngSubmit)=\"signIn()\">\n    <div class=\"example-container\">\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Enter your Email</mat-label>\n            <input matInput placeholder=\"Enter Your Email\" formControlName=\"email\" required>\n            <mat-error *ngIf=\"this.signUpForm.get('email')?.value.invalid\">{{ getErrorMessageEmail() }}</mat-error>\n        </mat-form-field>\n    </div>\n    <div class=\"example-container\">\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Enter your Password</mat-label>\n            <input matInput placeholder=\"Enter Your Password\" formControlName=\"password\" required>\n            <mat-error *ngIf=\"this.signUpForm.get('password')?.value.invalid\">{{ getErrorMessagePassword() }}</mat-error>\n        </mat-form-field>\n    </div>\n    <button type='submit'>Sign Up</button>\n</form>\n</mat-card-content>\n</mat-card>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'client';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { SignInComponent } from './sign-in/sign-in.component';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { AnalyticsComponent } from './analytics/analytics.component';\nimport { DocsComponent } from './docs/docs.component';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms'\n\nimport { MatListModule } from '@angular/material/list'\n\nimport { HttpClientModule } from '@angular/common/http'\n\nimport { CookieService } from 'ngx-cookie-service'\n\nimport { FlexLayoutModule } from '@angular/flex-layout'\n\nimport { ClipboardModule } from '@angular/cdk/clipboard'\n\nimport { MatSortModule } from '@angular/material/sort'\n\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { PayBillComponent } from './pay-bill/pay-bill.component';\nimport { SuccessComponent } from './success/success.component'\n\nimport { MatExpansionModule } from '@angular/material/expansion'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    SignInComponent,\n    SignUpComponent,\n    AnalyticsComponent,\n    DocsComponent,\n    PayBillComponent,\n    SuccessComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NoopAnimationsModule,\n    MatCardModule,\n    MatFormFieldModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatListModule,\n    HttpClientModule,\n    FlexLayoutModule,\n    ClipboardModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatExpansionModule\n  ],\n  providers: [CookieService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators, FormGroup, FormBuilder } from '@angular/forms';\nimport { HttpService } from '../http.service'\nimport { Router } from '@angular/router'\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})\nexport class SignUpComponent implements OnInit {\n  signUpForm: FormGroup;\n  constructor(private router: Router, private service: HttpService, private fb: FormBuilder) {\n    this.signUpForm = this.fb.group({\n      email: new FormControl(null, Validators.required),\n      password: new FormControl(null, Validators.required)\n    })\n   }\n\n  ngOnInit() { }\n  getErrorMessageEmail() {\n    if (this.signUpForm.get('email')?.value.hasError('required')) {\n      return 'You must enter a value';\n    }\n    return this.signUpForm.get('email')?.value.hasError('email') ? 'Not valid' : '';\n  }\n  getErrorMessagePassword() {\n    if (this.signUpForm.get('password')?.value.hasError('required')) {\n      return 'You must enter a value';\n    }\n    return this.signUpForm.get('password')?.value.hasError('password') ? 'Not valid' : '';\n  }\n  signUp() {\n    let newUser = {\n      email: this.signUpForm.get('email')?.value,\n      password: this.signUpForm.get('password')?.value\n    }\n    this.service.signUp(newUser).subscribe(response => {\n      if (response === 'User Created') {\n        this.router.navigate(['/signIn'])\n      } else {\n        alert(\"Sign Up Not Sucessful\")\n      }\n    })\n  }\n}\n","<app-header></app-header>\n<mat-card>\n    <mat-card-title>\n        <h1>Sign Up</h1>\n    </mat-card-title>\n    <mat-card-subtitle>\n        <p>AdSensei is an Application Programming Interface (API) that allows for the storage of media files on a server. This is perfect if your website or mobile application needs media files such as mp3 or mp4 files. All one needs to do is to hit the right enpoints with the token in the headers and your able to store your media files!</p>\n    </mat-card-subtitle>\n    <mat-card-content>\n<form [formGroup]=\"signUpForm\" (ngSubmit)=\"signUp()\">\n    <div class=\"example-container\">\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Enter your Email</mat-label>\n            <input matInput placeholder=\"Enter Your Email\" formControlName=\"email\" required>\n            <mat-error *ngIf=\"this.signUpForm.get('email')?.value.invalid\">{{ getErrorMessageEmail() }}</mat-error>\n        </mat-form-field>\n    </div>\n    <div class=\"example-container\">\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Enter your Password</mat-label>\n            <input matInput placeholder=\"Enter Your Password\" formControlName=\"password\" required>\n            <mat-error *ngIf=\"this.signUpForm.get('password')?.value.invalid\">{{ getErrorMessagePassword() }}</mat-error>\n        </mat-form-field>\n    </div>\n    <button type='submit'>Sign Up</button>\n</form>\n</mat-card-content>\n</mat-card>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <a class=\"navbar-brand\" href=\"#\">AdSensei</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n  \n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul class=\"navbar-nav mr-auto\">\n        <li class=\"nav-item dropdown\">\n          <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n            Authentication\n          </a>\n          <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n            <a class=\"dropdown-item\" routerLink=\"/\">Sign Up</a>\n            <a class=\"dropdown-item\" routerLink=\"/signIn\">Sign In</a>\n          </div>\n        </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/analytics\">Admin</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/payBill\">Billing</a>\n          </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/docs\">Docimentation</a>\n        </li>\n      </ul>\n    </div>\n  </nav>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AnalyticsComponent } from './analytics/analytics.component';\nimport { DocsComponent } from './docs/docs.component';\nimport { PayBillComponent } from './pay-bill/pay-bill.component';\nimport { SignInComponent } from './sign-in/sign-in.component';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { SuccessComponent } from './success/success.component'\n\nconst routes: Routes = [\n  { path: '', component: SignUpComponent },\n  { path: 'signIn', component: SignInComponent },\n  { path: 'analytics', component: AnalyticsComponent },\n  { path: 'docs', component: DocsComponent },\n  { path: 'payBill', component: PayBillComponent },\n  { path: 'success', component: SuccessComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}